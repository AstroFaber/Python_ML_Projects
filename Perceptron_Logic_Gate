import codecademylib3_seaborn
from sklearn.linear_model import Perceptron
import matplotlib.pyplot as plt
import numpy as np
from itertools import product

#DATA AND LABELS FOR AND LOGIC GATE
data = [[0,0],[0,1],[1,0], [1,1]]

#AND labels
labels = [0,0,0,1]

#XOR Labels
#labels = [0,1,1,0]

#OR Labels
#labels = [0,1,1,1]

#SCATTER PLOT FOR AND L.G.
plt.scatter([point[0] for point in data], [point[1] for point in data], c=labels)


#BUILDING THE PERCEPTRON CLASSIFIER 
#Max_iter set the # of times the perceptron loops through the Training_Data. Default: 1000
classifier = Perceptron(max_iter = 40)
classifier.fit(data, labels)
print(classifier.score(data,labels))

# #Investigation the classifier's Decision Function Method. 
# print(classifier.decision_function([[0, 0], [1, 1], [0.5, 0.5],[0, 0.1],[0, 0.2]]))

x_values = np.linspace(0,1,100)
y_values = np.linspace(0,1,100)

point_grid = list(product(x_values, y_values))

#Investigation the classifier's Decision Function Method. 
distances = classifier.decision_function(point_grid)
abs_distances = [abs(distance) for distance in distances]

#Converting Abs distances into a 100x100 matrix
distances_matrix = np.reshape(abs_distances, (100,100))

#Creating a heatmap variable with the 3 parameters
heatmap = plt.pcolormesh(x_values, y_values, distances_matrix)
plt.colorbar(heatmap)

plt.show()
